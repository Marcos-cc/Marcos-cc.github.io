<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://marcos-cc.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://marcos-cc.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://marcos-cc.github.io/about/</link>
      <pubDate>Wed, 27 Dec 2023 22:09:12 +0800</pubDate>
      <guid>https://marcos-cc.github.io/about/</guid>
      <description></description>
    </item>
    <item>
      <title>Test</title>
      <link>https://marcos-cc.github.io/test/</link>
      <pubDate>Wed, 27 Dec 2023 21:27:52 +0800</pubDate>
      <guid>https://marcos-cc.github.io/test/</guid>
      <description>二分查找 二分最关键的在于确定区间划分的形式，是要用[l, r]还是[l, R) 一旦确定形式，在查找过程中就不改变了。 具体逻辑(l, r 是怎么变)想想就不会错了&#xA;class Solution { public: int search(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { // [l, r] /*int l = 0, r = nums.size() - 1; while(l &amp;lt;= r) { int mid = l + (r - l)/2; int x = nums[mid]; if(x &amp;lt; target) { l = mid + 1; } else if(x == target) { return mid; } else { r = mid - 1; } } return -1; */ // [l, r) int l = 0, r = nums.</description>
    </item>
    <item>
      <title>12 27</title>
      <link>https://marcos-cc.github.io/12-27/</link>
      <pubDate>Wed, 27 Dec 2023 20:58:28 +0800</pubDate>
      <guid>https://marcos-cc.github.io/12-27/</guid>
      <description>二分查找 二分最关键的在于确定区间划分的形式，是要用[l, r]还是[l, R) 一旦确定形式，在查找过程中就不改变了。 具体逻辑(l, r 是怎么变)想想就不会错了&#xA;class Solution { public: int search(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { // [l, r] /*int l = 0, r = nums.size() - 1; while(l &amp;lt;= r) { int mid = l + (r - l)/2; int x = nums[mid]; if(x &amp;lt; target) { l = mid + 1; } else if(x == target) { return mid; } else { r = mid - 1; } } return -1; */ // [l, r) int l = 0, r = nums.</description>
    </item>
  </channel>
</rss>
